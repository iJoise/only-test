{"version":3,"sources":["constants/index.ts","components/common/Flex.tsx","components/ServerError.tsx","api/server/utils/index.ts","api/server/axios.ts","api/api.ts","components/common/Button.tsx","components/Login.tsx","components/Profile.tsx","components/Title.tsx","state/reducer.ts","state/action.ts","App.tsx","index.tsx"],"names":["Action_Type","Status","Path","Flex","props","StyledFlex","styled","div","direction","align","justify","margin","height","ServerError","errorMessage","StyledError","StyleIcon","StyledMessage","h1","span","request","responseData","status","headers","config","data","axios","_fake","url","Promise","resolve","reject","min","max","setTimeout","indexOf","email","password","message","isAuth","rememberMe","OK","FAILED","Math","floor","random","post","this","api","Button","children","onClick","restProps","StyledButton","button","disabled","bgColor","color","width","Login","React","memo","setErrorMessage","setIsFetching","isFetching","setIsAuth","setUserEmail","useForm","register","handleSubmit","errors","formState","onSubmit","useCallback","a","response","localStorage","setItem","JSON","stringify","LoginContainer","Form","ServerErrorBlock","Label","Input","required","StyledErrorContainer","type","LabelCheckbox","Checkbox","Checked","form","label","input","Profile","userEmail","logout","value","removeItem","ProfileTitle","h2","Title","StyledTitle","initialState","isError","loginReducer","state","action","SET_IS_FETCHING","SET_IS_ERROR","SET_USER_NAME","SET_IS_AUTH","payload","AppWrapper","App","useReducer","dispatch","error","useEffect","getItem","parse","path","PROFILE","render","LOGIN","to","Global","createGlobalStyle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c2a1ba5d.chunk.js","sourcesContent":["export enum Action_Type {\n   SET_IS_FETCHING = 'only/login/SET_IS_FETCHING',\n   SET_IS_ERROR = 'only/login/SET_IS_ERROR',\n   SET_USER_NAME = 'only/login/SET_USER_NAME',\n   SET_IS_AUTH = 'only/login/SET_IS_AUTH'\n}\n\nexport enum Status {\n   OK = 200 ,\n   FAILED = 401\n}\n\nexport enum Path {\n   LOGIN = '/login',\n   PROFILE = '/profile'\n}\n","import React, {ReactNode} from \"react\";\nimport styled from \"styled-components\";\n\ntype FlexPropsType = {\n   direction?: string\n   align?: string\n   justify?: string\n   margin?: string\n   height?: string\n   children: ReactNode\n}\n\nexport const Flex: React.FC<FlexPropsType> = (props) => {\n\n   return <StyledFlex {...props}/>\n}\n\nconst StyledFlex = styled.div<FlexPropsType>`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  align-items: ${props => props.align || 'stretch'};\n  justify-content: ${props => props.justify || 'stretch'};\n  margin: ${({margin}) => margin || '0'};\n  height: ${({height}) => height || 'auto'};\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype ServerErrorPropsType = {\n   errorMessage: string | null\n}\n\nexport const ServerError: React.FC<ServerErrorPropsType> = ({errorMessage}) => (\n   <StyledError>\n      <StyleIcon>!</StyleIcon>\n      <StyledMessage>{errorMessage}</StyledMessage>\n   </StyledError>\n)\n\nconst StyledError = styled.h1`\n  width: 100%;\n  background: #F5E9E9;\n  border: 1px solid #E26F6F;\n  box-sizing: border-box;\n  border-radius: 8px;\n  height: 60px;\n  padding: 20px;\n`\nconst StyleIcon = styled.span`\n  display: inline-block;\n  text-align: center;\n  width: 20px;\n  height: 20px;\n  background: #FFC8C8;\n  border-radius: 50%;\n  margin-right: 15px;\n  font-size: 14px;\n  line-height: 18px;\n  color: #EE6565;\n`\nconst StyledMessage = styled.span`\n  font-size: 14px;\n  line-height: 17px;\n`\n","import {DataType} from \"../types\";\nimport {Status} from \"../../../constants\";\n\nexport const request = (responseData: DataType, status: Status) => ({\n   request: {},\n   status: status,\n   headers: {},\n   config: {},\n   data: responseData\n})\n\nexport const randomIntFromInterval = (min: number, max: number) => {\n   return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import {DataType, RequestDataType, ResponseDataType} from \"./types\";\nimport {Status} from \"../../constants\";\nimport {randomIntFromInterval, request} from \"./utils\";\n\nexport const axios = {\n   _fake(url: string, data: RequestDataType) {\n      return new Promise<ResponseDataType>((resolve, reject) => {\n         setTimeout(() => {\n            let responseData: DataType;\n\n            if (url.indexOf('onlydigital') > 0) {\n               if (data.email === 'steve.jobs@example.com' && data.password === 'password') {\n                  responseData = {\n                     message: 'You are successfully logged in',\n                     isAuth: true,\n                     email: data.email,\n                     rememberMe: data.rememberMe\n                  }\n                  resolve(request(responseData, Status.OK))\n               } else {\n                  responseData = {\n                     message: `Пользователя ${data.email} не существует`,\n                     isAuth: false\n                  }\n                  reject(request(responseData, Status.FAILED))\n               }\n            }\n         }, randomIntFromInterval(1, 3) * 1000);\n      });\n   },\n   post(url: string, data: RequestDataType) {\n      return this._fake(url, data);\n   },\n}\n","import {axios} from \"./server/axios\";\nimport {RequestDataType} from \"./server/types\";\n\nexport const api = {\n   login(data: RequestDataType) {\n      return axios.post(\"https://onlydigital.ru/\", data);\n   }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype ButtonPropsType =  {\n   bgColor?: string\n   color?: string\n   width?: string\n   disabled?: boolean\n   onClick?: (value: boolean) => void\n}\n\nexport const Button: React.FC<ButtonPropsType> = (props) => {\n   const {children, onClick, ...restProps} = props\n\n   const onClickHandler = () => {\n      onClick && onClick(false);\n   }\n\n   return <StyledButton onClick={onClickHandler} {...restProps}>{children}</StyledButton>\n\n}\n\nconst StyledButton = styled.button<ButtonPropsType>`\n  margin-top: 40px;\n  height: 60px;\n  border-radius: 8px;\n  background: ${props => props.disabled ? '#99A9FF' : props.bgColor};\n  color: ${props => props.color || '#fff'};\n  border: none;\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 22px;\n  cursor: pointer;\n  width: ${props => props.width || 'auto'};\n  &:active {\n    transform: scale(0.98);\n  }\n`\n","import React, {useCallback} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport {Flex} from \"./common/Flex\";\nimport styled from \"styled-components\";\nimport {ServerError} from \"./ServerError\";\nimport {api} from \"../api/api\";\nimport {Button} from \"./common/Button\";\n\ntype LoginPropsType = {\n   errorMessage: string | null\n   setErrorMessage: (error: string) => void\n   setIsFetching: (value: boolean) => void\n   isFetching: boolean\n   setIsAuth: (value: boolean) => void\n   setUserEmail: (userEmail: string) => void\n}\n\ntype FormData = {\n   email: string,\n   password: string,\n   rememberMe: boolean\n};\n\nexport const Login: React.FC<LoginPropsType> = React.memo((props) => {\n   const {errorMessage, setErrorMessage, setIsFetching, isFetching, setIsAuth, setUserEmail} = props;\n   const {register, handleSubmit, formState: {errors}} = useForm<FormData>();\n\n   const onSubmit = useCallback(async (data: FormData) => {\n      try {\n         setIsFetching(true);\n\n         const response = await api.login(data);\n\n         setIsAuth(true);\n\n         response.data.email && setUserEmail(response.data.email);\n\n         if (response.data.rememberMe) {\n            localStorage.setItem('isAuth', JSON.stringify(response.data.isAuth));\n            localStorage.setItem('userEmail', JSON.stringify(response.data.email));\n         }\n      } catch(err) {\n         setErrorMessage(err.data.message);\n      } finally {\n         setIsFetching(false);\n      }\n   }, [setErrorMessage, setIsFetching, setIsAuth, setUserEmail]);\n\n   return (\n      <LoginContainer>\n         <Flex justify={'center'} align={'center'} height={'80vh'}>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n               <ServerErrorBlock>\n                  {errorMessage && <ServerError errorMessage={errorMessage}/>}\n               </ServerErrorBlock>\n               <Flex direction={'column'}>\n                  <Label>Логин</Label>\n                  <Input {...register(\"email\", {required: true})} />\n                  <StyledErrorContainer>\n                     {errors.email && <StyledError>Обязательное поле</StyledError>}\n                  </StyledErrorContainer>\n\n                  <Label>Пароль</Label>\n                  <Input type='password' {...register(\"password\", {required: true})} />\n                  <StyledErrorContainer>\n                     {errors.password && <StyledError>Обязательное поле</StyledError>}\n                  </StyledErrorContainer>\n\n                  <LabelCheckbox>\n                     Запомнить пароль\n                     <Checkbox\n                        type=\"checkbox\"\n                        {...register(\"rememberMe\")}\n                     />\n                     <Checked/>\n                  </LabelCheckbox>\n\n                  <Button bgColor='#4A67FF' disabled={isFetching}>Войти</Button>\n               </Flex>\n            </Form>\n         </Flex>\n      </LoginContainer>\n   );\n})\n\nconst ServerErrorBlock = styled.div`\n  height: 60px;\n`\nconst LoginContainer = styled.h1`\n  max-width: 650px;\n  margin: 0 auto;\n`\nconst Form = styled.form`\n  min-width: 640px;\n`\nconst Label = styled.label`\n  font-size: 16px;\n  line-height: 19px;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  font-weight: normal;\n`\nconst Input = styled.input`\n  height: 60px;\n  border-radius: 8px;\n  border: none;\n  background-color: #F5F5F5;\n  padding: 20px;\n  font-size: 16px;\n  line-height: 19px;\n  color: #232323;\n  &:focus {\n    outline: none;\n  }\n`\nconst StyledError = styled.span`\n  padding-top: 8px;\n  font-size: 14px;\n  line-height: 17px;\n  color: #E26F6F;\n  font-weight: normal;\n`\nconst StyledErrorContainer = styled.div`\n  height: 25px;\n`\nconst Checkbox = styled.input`\n  height: 0;\n  width: 0;\n  opacity: 0;\n  z-index: -1;\n`;\nconst LabelCheckbox = styled.label`\n  margin-top: 20px;\n  position: relative;\n  display: inline-block;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 19px;\n  padding-left: 35px;\n`;\nconst Checked = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 1px solid #000;\n  border-radius: 4px;\n  \n  &::after {\n    content: \"\";\n    position: absolute;\n    display: none;\n  }\n\n  ${Checkbox}:checked + &::after {\n    display: block;\n    top: 2px;\n    left: 2px;\n    width: 14px;\n    height: 14px;\n    background: #4A67FF;\n    border-radius: 2px;\n  }\n`;\n","import React, {useCallback} from \"react\";\nimport {Flex} from \"./common/Flex\";\nimport styled from \"styled-components\";\nimport {Button} from \"./common/Button\";\n\ntype ProfilePropsType = {\n   userEmail: string\n   setIsAuth: (value: boolean) => void\n}\n\nexport const Profile: React.FC<ProfilePropsType> = React.memo(({userEmail, setIsAuth}) => {\n\n   const logout = useCallback((value: boolean) => {\n      setIsAuth(value);\n      localStorage.removeItem('isAuth');\n      localStorage.removeItem('userEmail');\n   },[setIsAuth])\n\n   return (\n      <Flex justify='center' align='center' height='80vh' direction='column'>\n         <ProfileTitle>Здравствуйте, <span>{userEmail}</span></ProfileTitle>\n         <Button onClick={logout} width='200px' bgColor='#F5F5F5' color='#000'>Выйти</Button>\n      </Flex>\n   )\n})\n\nconst ProfileTitle = styled.h2`\n  font-size: 40px;\n  line-height: 48px;\n  span {\n    font-size: inherit;\n    font-weight: bold;\n  }\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Title: React.FC = () => <StyledTitle>ONLY.</StyledTitle>\n\nconst StyledTitle = styled.h1`\n  font-weight: bold;\n  font-size: 64px;\n  line-height: 78px;\n  margin-top: 40px;\n`\n","import {ActionType, StateType} from \"./types\";\nimport {Action_Type} from \"../constants\";\n\nexport const initialState: StateType = {\n   isFetching: false,\n   isError: null,\n   isAuth: false,\n   userEmail: ''\n}\n\nexport const loginReducer = (state: StateType, action: ActionType): StateType => {\n   switch (action.type) {\n      case Action_Type.SET_IS_FETCHING:\n      case Action_Type.SET_IS_ERROR:\n      case Action_Type.SET_USER_NAME:\n      case Action_Type.SET_IS_AUTH:\n         return {...state, ...action.payload};\n      default:\n         return state;\n   }\n}\n","import {Action_Type} from \"../constants\";\n\nexport const action = {\n   setIsFetching: (isFetching: boolean) => ({type: Action_Type.SET_IS_FETCHING, payload: {isFetching}}),\n   setIsError: (isError: string) => ({type: Action_Type.SET_IS_ERROR, payload: {isError}}),\n   setUserEmail: (userEmail: string) => ({type: Action_Type.SET_USER_NAME, payload: {userEmail}}),\n   setIsAuth: (isAuth: boolean) => ({type: Action_Type.SET_IS_AUTH, payload: {isAuth}})\n}\n","import React, {useCallback, useEffect, useReducer} from 'react';\nimport styled from \"styled-components\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {Login} from \"./components/Login\";\nimport {Profile} from \"./components/Profile\";\nimport {Title} from \"./components/Title\";\nimport {Flex} from \"./components/common/Flex\";\nimport {initialState, loginReducer} from \"./state/reducer\";\nimport {action} from \"./state/action\";\nimport {Path} from \"./constants\";\n\nconst AppWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n`\n\nexport const App = () => {\n   const [state, dispatch] = useReducer(loginReducer, initialState);\n\n   const setErrorMessage = useCallback((error: string) => {\n      dispatch(action.setIsError(error));\n   }, []);\n   const setIsFetching = useCallback((value: boolean) => {\n      dispatch(action.setIsFetching(value));\n   }, []);\n   const setIsAuth = useCallback((value: boolean) => {\n      dispatch(action.setIsAuth(value));\n   }, []);\n   const setUserEmail = useCallback((userEmail: string) => {\n      dispatch(action.setUserEmail(userEmail));\n   }, []);\n\n   useEffect(() => {\n      const isAuth = localStorage.getItem('isAuth');\n      const userEmail = localStorage.getItem('userEmail');\n      if (isAuth && userEmail) {\n         dispatch(action.setUserEmail(JSON.parse(userEmail)));\n         dispatch(action.setIsAuth(JSON.parse(isAuth)));\n      }\n   }, []);\n\n   return (\n      <AppWrapper>\n         <Flex justify={'center'}>\n            <Title/>\n         </Flex>\n         <Route path={Path.PROFILE} render={() =>\n            <Profile\n               userEmail={state.userEmail}\n               setIsAuth={setIsAuth}\n            />}\n         />\n         <Route path={Path.LOGIN} render={() =>\n            <Login\n               setErrorMessage={setErrorMessage}\n               errorMessage={state.isError}\n               setIsFetching={setIsFetching}\n               isFetching={state.isFetching}\n               setIsAuth={setIsAuth}\n               setUserEmail={setUserEmail}\n            />}\n         />\n         {\n            state.isAuth\n               ? <Redirect to={Path.PROFILE}/>\n               : <Redirect to={Path.LOGIN}/>\n         }\n      </AppWrapper>\n   );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport {createGlobalStyle} from \"styled-components\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Helvetica Neue\", serif;\n    font-size: 16px;\n    font-weight: normal;\n  }\n`\n\nReactDOM.render(\n   <BrowserRouter>\n      <Global/>\n      <App/>\n   </BrowserRouter>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}