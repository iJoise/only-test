{"version":3,"sources":["components/common/Flex.tsx","components/ServerError.tsx","api/axios.ts","api/api.ts","state/action.ts","components/common/Button.tsx","components/Login.tsx","components/Profile.tsx","components/Title.tsx","state/reducer.ts","App.tsx","index.tsx"],"names":["StyledFlex","styled","div","props","direction","align","justify","margin","height","Flex","ServerError","errorMessage","StyledError","StyleIcon","StyledMessage","h1","span","axios","_fake","url","data","Promise","resolve","reject","min","max","setTimeout","responseData","indexOf","email","password","message","isAuth","rememberMe","request","Math","floor","random","post","this","status","headers","config","Action_Type","api","Button","children","onClick","restProps","StyledButton","button","disabled","bgColor","color","width","Login","React","memo","setErrorMessage","setIsFetching","isFetching","setIsAuth","setUserEmail","useForm","register","handleSubmit","errors","formState","onSubmit","useCallback","a","response","localStorage","setItem","JSON","stringify","LoginContainer","Form","ServerErrorBlock","Label","Input","required","StyledErrorContainer","type","LabelCheckbox","Checkbox","Checked","form","label","input","ProfileTitle","h2","Profile","userEmail","value","removeItem","StyledTitle","Title","action","SET_IS_FETCHING","payload","isError","SET_IS_ERROR","SET_USER_NAME","SET_IS_AUTH","initialState","loginReducer","state","AppWrapper","App","useReducer","dispatch","useEffect","getItem","parse","error","path","render","to","Global","createGlobalStyle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.db26d16e.chunk.js","sourcesContent":["import React, {ReactNode} from \"react\";\nimport styled from \"styled-components\";\n\ntype FlexPropsType = {\n   direction?: string\n   align?: string\n   justify?: string\n   margin?: string\n   height?: string\n   children: ReactNode\n}\n\nconst StyledFlex = styled.div<FlexPropsType>`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  align-items: ${props => props.align || 'stretch'};\n  justify-content: ${props => props.justify || 'stretch'};\n  margin: ${({margin}) => margin || '0'};\n  height: ${({height}) => height || 'auto'};\n`\n\nexport const Flex: React.FC<FlexPropsType> = (props) => {\n\n   return <StyledFlex {...props}/>\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype ServerErrorPropsType = {\n   errorMessage: string | null\n}\n\nexport const ServerError: React.FC<ServerErrorPropsType> = ({errorMessage}) => {\n\n   return (\n      <StyledError>\n         <StyleIcon>!</StyleIcon>\n         <StyledMessage>{errorMessage}</StyledMessage>\n      </StyledError>\n   )\n}\n\nconst StyledError = styled.h1`\n  width: 100%;\n  background: #F5E9E9;\n  border: 1px solid #E26F6F;\n  box-sizing: border-box;\n  border-radius: 8px;\n  height: 60px;\n  padding: 20px;\n`\n\nconst StyleIcon = styled.span`\n  display: inline-block;\n  text-align: center;\n  width: 20px;\n  height: 20px;\n  background: #FFC8C8;\n  border-radius: 50%;\n  margin-right: 15px;\n  font-size: 14px;\n  line-height: 18px;\n  color: #EE6565;\n`\nconst StyledMessage = styled.span`\n  font-size: 14px;\n  line-height: 17px;\n`","type Status = 200 | 401\n\n\nexport type RequestDataType = {\n   email: string | null\n   password: string | null\n   rememberMe: boolean\n}\n\nexport type DataType = {\n   message: string\n   isAuth: boolean\n   email?: string\n   rememberMe?: boolean\n}\n\nexport type ResponseDataType = {\n   request: {},\n   status: Status,\n   headers: {},\n   config: {},\n   data: DataType\n}\n\nexport const axios = {\n   _fake(url: string, data: RequestDataType) {\n      return new Promise<ResponseDataType>((resolve, reject) => {\n         setTimeout(() => {\n            let responseData: DataType;\n            if (url.indexOf('onlydigital') > 0) {\n               if (data.email === 'steve.jobs@example.com' && data.password === 'password') {\n                  responseData = {\n                     message: 'You are successfully logged in',\n                     isAuth: true,\n                     email: data.email,\n                     rememberMe: data.rememberMe\n                  }\n                  resolve(request(responseData, 200))\n               } else {\n                  responseData = {\n                     message: `Пользователя ${data.email} не существует`,\n                     isAuth: false\n                  }\n                  reject(request(responseData, 401))\n               }\n            }\n         }, randomIntFromInterval(1, 3) * 1000);\n      });\n   },\n   post(url: string, data: RequestDataType) {\n      return this._fake(url, data);\n   },\n}\n\nconst request = (responseData: DataType, status: Status) => ({\n   request: {},\n   status: status,\n   headers: {},\n   config: {},\n   data: responseData\n})\n\nfunction randomIntFromInterval(min: number, max: number) { // min and max included\n   return Math.floor(Math.random() * (max - min + 1) + min);\n}","import {axios, RequestDataType} from \"./axios\";\n\n\nexport const api = {\n   login(data: RequestDataType) {\n      return axios.post(\"https://https://onlydigital.ru/\", data);\n   }\n}","export enum Action_Type {\n   SET_IS_FETCHING = 'only/login/SET_IS_FETCHING',\n   SET_IS_ERROR = 'only/login/SET_IS_ERROR',\n   SET_USER_NAME = 'only/login/SET_USER_NAME',\n   SET_IS_AUTH = 'only/login/SET_IS_AUTH'\n}\n\nexport const action = {\n   setIsFetching: (isFetching: boolean) => ({type: Action_Type.SET_IS_FETCHING, payload: {isFetching}}),\n   setIsError: (isError: string) => ({type: Action_Type.SET_IS_ERROR, payload: {isError}}),\n   setUserEmail: (userEmail: string) => ({type: Action_Type.SET_USER_NAME, payload: {userEmail}}),\n   setIsAuth: (isAuth: boolean) => ({type: Action_Type.SET_IS_AUTH, payload: {isAuth}})\n}\n\n\ntype SetFetchingActionType = ReturnType<typeof action.setIsFetching>\ntype SetErrorActionType = ReturnType<typeof action.setIsError>\ntype SetUserNameActionType = ReturnType<typeof action.setUserEmail>\ntype SetIsAuthActionType = ReturnType<typeof action.setIsAuth>\nexport type ActionType = SetFetchingActionType\n   | SetErrorActionType\n   | SetUserNameActionType\n   | SetIsAuthActionType","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype ButtonPropsType =  {\n   bgColor?: string\n   color?: string\n   width?: string\n   disabled?: boolean\n   onClick?: (value: boolean) => void\n}\n\n\n\nexport const Button: React.FC<ButtonPropsType> = (props) => {\n   const {children, onClick, ...restProps} = props\n\n   const onClickHandler = () => {\n      onClick && onClick(false);\n   }\n\n   return <StyledButton onClick={onClickHandler} {...restProps}>{children}</StyledButton>\n\n}\n\nconst StyledButton = styled.button<ButtonPropsType>`\n  margin-top: 40px;\n  height: 60px;\n  border-radius: 8px;\n  background: ${props => props.disabled ? '#99A9FF' : props.bgColor};\n  color: ${props => props.color || '#fff'};\n  border: none;\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 22px;\n  cursor: pointer;\n  width: ${props => props.width || 'auto'};\n  &:active {\n    transform: scale(0.98);\n  }\n`","import React, {useCallback} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport {Flex} from \"./common/Flex\";\nimport styled from \"styled-components\";\nimport {ServerError} from \"./ServerError\";\nimport {api} from \"../api/api\";\nimport {Button} from \"./common/Button\";\n\ntype LoginPropsType = {\n   errorMessage: string | null\n   setErrorMessage: (error: string) => void\n   setIsFetching: (value: boolean) => void\n   isFetching: boolean\n   setIsAuth: (value: boolean) => void\n   setUserEmail: (userEmail: string) => void\n}\ntype FormData = {\n   email: string,\n   password: string,\n   rememberMe: boolean\n};\n\n\nexport const Login: React.FC<LoginPropsType> = React.memo((props) => {\n\n   const {errorMessage, setErrorMessage, setIsFetching, isFetching, setIsAuth, setUserEmail} = props;\n\n   const {register, handleSubmit, formState: {errors}} = useForm<FormData>();\n\n   const onSubmit = useCallback(async (data: FormData) => {\n      try {\n         setIsFetching(true);\n         const response = await api.login(data);\n         setIsAuth(true);\n         response.data.email && setUserEmail(response.data.email);\n         if (response.data.rememberMe) {\n            localStorage.setItem('isAuth', JSON.stringify(response.data.isAuth));\n            localStorage.setItem('userEmail', JSON.stringify(response.data.email));\n         }\n      } catch(err) {\n         setErrorMessage(err.data.message);\n      } finally {\n         setIsFetching(false);\n      }\n   }, [setErrorMessage, setIsFetching, setIsAuth, setUserEmail]);\n\n\n   return (\n      <LoginContainer>\n         <Flex justify={'center'} align={'center'} height={'80vh'}>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n               <ServerErrorBlock>\n                  {errorMessage && <ServerError errorMessage={errorMessage}/>}\n               </ServerErrorBlock>\n               <Flex direction={'column'}>\n                  <Label>Логин</Label>\n                  <Input {...register(\"email\", {required: true})} />\n                  <StyledErrorContainer>\n                     {errors.email && <StyledError>Обязательное поле</StyledError>}\n                  </StyledErrorContainer>\n\n                  <Label>Пароль</Label>\n                  <Input type='password' {...register(\"password\", {required: true})} />\n                  <StyledErrorContainer>\n                     {errors.password && <StyledError>Обязательное поле</StyledError>}\n                  </StyledErrorContainer>\n\n                  <LabelCheckbox>\n                     Запомнить пароль\n                     <Checkbox\n                        type=\"checkbox\"\n                        {...register(\"rememberMe\")}\n                     />\n                     <Checked/>\n                  </LabelCheckbox>\n\n                  <Button bgColor='#4A67FF' disabled={isFetching}>Войти</Button>\n               </Flex>\n            </Form>\n         </Flex>\n      </LoginContainer>\n   );\n})\n\nconst ServerErrorBlock = styled.div`\n  height: 60px;\n`\n\nconst LoginContainer = styled.h1`\n  max-width: 650px;\n  margin: 0 auto;\n`\nconst Form = styled.form`\n  min-width: 640px;\n`\nconst Label = styled.label`\n  font-size: 16px;\n  line-height: 19px;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  font-weight: normal;\n`\nconst Input = styled.input`\n  height: 60px;\n  border-radius: 8px;\n  border: none;\n  background-color: #F5F5F5;\n  padding: 20px;\n  font-size: 16px;\n  line-height: 19px;\n  color: #232323;\n  &:focus {\n    outline: none;\n  }\n`\nconst StyledError = styled.span`\n  padding-top: 8px;\n  font-size: 14px;\n  line-height: 17px;\n  color: #E26F6F;\n  font-weight: normal;\n`\nconst StyledErrorContainer = styled.div`\n  height: 25px;\n`\nconst Checkbox = styled.input`\n  height: 0;\n  width: 0;\n  opacity: 0;\n  z-index: -1;\n`;\nconst LabelCheckbox = styled.label`\n  margin-top: 20px;\n  position: relative;\n  display: inline-block;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 19px;\n  padding-left: 35px;\n`;\nconst Checked = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 1px solid #000;\n  border-radius: 4px;\n  \n  &::after {\n    content: \"\";\n    position: absolute;\n    display: none;\n  }\n\n  ${Checkbox}:checked + &::after {\n    display: block;\n    top: 2px;\n    left: 2px;\n    width: 14px;\n    height: 14px;\n    background: #4A67FF;\n    border-radius: 2px;\n  }\n`;","import React from \"react\";\nimport {Flex} from \"./common/Flex\";\nimport styled from \"styled-components\";\nimport {Button} from \"./common/Button\";\n\ntype ProfilePropsType = {\n   userEmail: string\n   setIsAuth: (value: boolean) => void\n}\n\nconst ProfileTitle = styled.h2`\n  font-size: 40px;\n  line-height: 48px;\n  span {\n    font-size: inherit;\n    font-weight: bold;\n  }\n`\n\nexport const Profile: React.FC<ProfilePropsType> = React.memo(({userEmail, setIsAuth}) => {\n\n   const logout = (value: boolean) => {\n      setIsAuth(value);\n      localStorage.removeItem('isAuth');\n      localStorage.removeItem('userEmail');\n   }\n\n   return (\n      <Flex justify='center' align='center' height='80vh' direction='column'>\n         <ProfileTitle>Здравствуйте, <span>{userEmail}</span></ProfileTitle>\n         <Button onClick={logout} width='200px' bgColor='#F5F5F5' color='#000'>Выйти</Button>\n      </Flex>\n   )\n})\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTitle = styled.h1`\n  font-weight: bold;\n  font-size: 64px;\n  line-height: 78px;\n  margin-top: 40px;\n`\n\nexport const Title: React.FC = () => {\n\n   return <StyledTitle>\n         ONLY.\n      </StyledTitle>\n\n}\n","import {Action_Type, ActionType} from \"./action\";\n\nexport const initialState: StateType = {\n   isFetching: false,\n   isError: null,\n   isAuth: false,\n   userEmail: ''\n}\n\nexport const loginReducer = (state: StateType, action: ActionType): StateType => {\n   switch (action.type) {\n      case Action_Type.SET_IS_FETCHING:\n      case Action_Type.SET_IS_ERROR:\n      case Action_Type.SET_USER_NAME:\n      case Action_Type.SET_IS_AUTH:\n         return {...state, ...action.payload};\n      default:\n         return state;\n   }\n}\n\n\nexport type StateType = {\n   isFetching: boolean\n   isError: string | null\n   isAuth: boolean\n   userEmail: string\n}\n","import React, {useCallback, useEffect, useReducer} from 'react';\nimport styled from \"styled-components\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {Login} from \"./components/Login\";\nimport {Profile} from \"./components/Profile\";\nimport {Title} from \"./components/Title\";\nimport {Flex} from \"./components/common/Flex\";\nimport {initialState, loginReducer} from \"./state/reducer\";\nimport {action} from \"./state/action\";\n\nconst AppWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n`\n\nfunction App() {\n   const [state, dispatch] = useReducer(loginReducer, initialState);\n\n   useEffect(() => {\n      const isAuth = localStorage.getItem('isAuth');\n      const userEmail = localStorage.getItem('userEmail');\n      if (isAuth && userEmail) {\n         dispatch(action.setUserEmail(JSON.parse(userEmail)));\n         dispatch(action.setIsAuth(JSON.parse(isAuth)));\n      }\n   }, []);\n\n\n   const setErrorMessage = useCallback((error: string) => {\n      dispatch(action.setIsError(error));\n   }, []);\n   const setIsFetching = useCallback((value: boolean) => {\n      dispatch(action.setIsFetching(value));\n   }, []);\n   const setIsAuth = useCallback((value: boolean) => {\n      dispatch(action.setIsAuth(value));\n   }, []);\n   const setUserEmail = useCallback((userEmail: string) => {\n      dispatch(action.setUserEmail(userEmail));\n   }, []);\n\n   return (\n      <AppWrapper>\n         <Flex justify={'center'}>\n            <Title/>\n         </Flex>\n         <Route path={'/profile'} render={() =>\n            <Profile\n               userEmail={state.userEmail}\n               setIsAuth={setIsAuth}\n            />}\n         />\n         <Route path={'/login'} render={() =>\n            <Login\n               setErrorMessage={setErrorMessage}\n               errorMessage={state.isError}\n               setIsFetching={setIsFetching}\n               isFetching={state.isFetching}\n               setIsAuth={setIsAuth}\n               setUserEmail={setUserEmail}\n            />}\n         />\n         {\n            state.isAuth\n               ? <Redirect to='/profile'/>\n               : <Redirect to='/login'/>\n         }\n      </AppWrapper>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createGlobalStyle} from \"styled-components\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Helvetica Neue\", serif;\n    font-size: 16px;\n    font-weight: normal;\n  }\n`\n\nReactDOM.render(\n   <BrowserRouter>\n      <Global/>\n      <App/>\n   </BrowserRouter>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}